// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Data;

#nullable disable

namespace Project.Data.Migrations
{
    [DbContext(typeof(Datacontext))]
    partial class DatacontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project.core.model.Guide", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("guides");
                });

            modelBuilder.Entity("Project.core.model.Registeres", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("registeres");
                });

            modelBuilder.Entity("Project.core.model.Trip", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("guideid")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("idGuide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numRegisteres")
                        .HasColumnType("int");

                    b.HasKey("code");

                    b.HasIndex("guideid");

                    b.ToTable("trips");
                });

            modelBuilder.Entity("RegisteresTrip", b =>
                {
                    b.Property<string>("registeresid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("tripscode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("registeresid", "tripscode");

                    b.HasIndex("tripscode");

                    b.ToTable("RegisteresTrip");
                });

            modelBuilder.Entity("Project.core.model.Trip", b =>
                {
                    b.HasOne("Project.core.model.Guide", "guide")
                        .WithMany("trips")
                        .HasForeignKey("guideid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("guide");
                });

            modelBuilder.Entity("RegisteresTrip", b =>
                {
                    b.HasOne("Project.core.model.Registeres", null)
                        .WithMany()
                        .HasForeignKey("registeresid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.core.model.Trip", null)
                        .WithMany()
                        .HasForeignKey("tripscode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project.core.model.Guide", b =>
                {
                    b.Navigation("trips");
                });
#pragma warning restore 612, 618
        }
    }
}
